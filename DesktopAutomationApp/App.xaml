<Application x:Class="DesktopAutomationApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:DesktopAutomationApp.ViewModels"
             xmlns:views="clr-namespace:DesktopAutomationApp.Views"
             xmlns:conv="clr-namespace:DesktopAutomationApp.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Orange.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:HotkeyDisplayConverter x:Key="HotkeyDisplayConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <conv:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <conv:InverseBooleanToContentConverter x:Key="InverseBooleanToContentConverter" />

            <!-- Basis-Style für alle Content-Views (UserControls) -->
            <Style x:Key="ContentViewBase" TargetType="UserControl">
                <!-- Hintergrund der View im Einklang mit dem Theme -->
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <!-- Standard-Schriftfarbe für ALLE TextElemente innerhalb der View -->
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <!-- Optional: Standard-Margin für den View-Inhalt -->
                <Setter Property="Margin" Value="0" />
                <Setter Property="TextElement.FontSize" Value="16" />
            </Style>

            <!-- Karten-/Panel-Style für Boxen innerhalb der View -->
            <Style x:Key="CardBorderStyle" TargetType="Border">
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"/>
                <Setter Property="Padding" Value="16"/>
                <Setter Property="Margin" Value="12"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>

            <!-- Einheitlicher Karten-Style -->
            <Style x:Key="CardBox" TargetType="Border" BasedOn="{StaticResource CardBorderStyle}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="MinHeight" Value="140"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>

            <!-- Optional: Überschrift-Style -->
            <Style x:Key="Heading1" TargetType="TextBlock">
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
            </Style>
            <Style x:Key="Heading2" TargetType="TextBlock">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
            </Style>
            <Style x:Key="Heading3" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="0,0,0,6"/>
            </Style>

            <!-- Automatisches Mapping: ViewModel -> View -->
            <DataTemplate DataType="{x:Type vm:StartViewModel}">
                <views:StartView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ListJobsViewModel}">
                <views:ListJobsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ListMakrosViewModel}">
                <views:ListMakrosView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ListHotkeysViewModel}">
                <views:ListHotkeysView/>
            </DataTemplate>            
            <DataTemplate DataType="{x:Type vm:JobStepsViewModel}">
                <views:JobStepsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:YoloDownloadsViewModel}">
                <views:YoloDownloadsView/>
            </DataTemplate>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
