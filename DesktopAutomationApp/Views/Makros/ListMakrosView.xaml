<UserControl x:Class="DesktopAutomationApp.Views.ListMakrosView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:DesktopAutomationApp.ViewModels"
             xmlns:views="clr-namespace:DesktopAutomationApp.Views"
             xmlns:mak="clr-namespace:TaskAutomation.Makros;assembly=TaskAutomation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behaviors="clr-namespace:DesktopAutomationApp.Behaviors"
             xmlns:conv="clr-namespace:DesktopAutomationApp.Converters"
             mc:Ignorable="d"
             Style="{StaticResource ContentViewBase}">

    <UserControl.Resources>
        <!-- Typ-Label links -->
        <Style x:Key="TypeLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <!-- Label (licksbündig, gemeinsame Breite) -->
        <Style x:Key="ParamLabel" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="18"/>
        </Style>

        <!-- Wert (linksbündig) -->
        <Style x:Key="ParamValue" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="18"/>
        </Style>

        <conv:TypeNameConverter x:Key="TypeNameConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- ========== EINHEITLICHE DETAIL-TEMPLATES ========== -->
        <!-- Muster: OuterGrid: [TypeCol(shared)] [16px] [DetailsGrid] -->
        <!-- DetailsGrid: [ParamLabelCol(shared)] [12px] [ValueCol] mit expliziten RowDefinitions -->

        <!-- MouseMove -->
        <DataTemplate DataType="{x:Type mak:MouseMoveBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="MouseMove" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*" SharedSizeGroup="ParamValueCol"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="X:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding X}" Style="{StaticResource ParamValue}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Y:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Y}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- MouseDown -->
        <DataTemplate DataType="{x:Type mak:MouseDownBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="MouseDown" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Button:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Button}" Style="{StaticResource ParamValue}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding X}" Style="{StaticResource ParamValue}"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Y:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Y}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- MouseUp -->
        <DataTemplate DataType="{x:Type mak:MouseUpBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="MouseUp" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Button:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Button}" Style="{StaticResource ParamValue}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding X}" Style="{StaticResource ParamValue}"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Y:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Y}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- KeyDown -->
        <DataTemplate DataType="{x:Type mak:KeyDownBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="KeyDown" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Key:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Key}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- KeyUp -->
        <DataTemplate DataType="{x:Type mak:KeyUpBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="KeyUp" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Key:" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Key}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Timeout -->
        <DataTemplate DataType="{x:Type mak:TimeoutBefehl}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="TypeCol"/>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Timeout" Style="{StaticResource TypeLabel}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ParamLabelCol"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Duration (ms):" Style="{StaticResource ParamLabel}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Duration}" Style="{StaticResource ParamValue}"/>
                </Grid>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
            <TextBlock Text="{Binding Title}" Style="{StaticResource Heading1}" Margin="0,0,12,0"/>

            <Button Content="Neus Makro" Command="{Binding NewMakroCommand}" FontSize="13"/>
            <Button Content="Makro Löschen" Command="{Binding DeleteMakroCommand}" Margin="8,0,0,0" FontSize="13"/>

            <Separator Width="16" Margin="8,0,8,0"/>
            
            <Button Content="Vorschau (Übersicht)" Command="{Binding PreviewOverviewCommand}" Margin="0,0,8,0" FontSize="13"/>
            <Button Content="Vorschau (Ablauf)" Command="{Binding PreviewPlaybackCommand}" Margin="0,0,8,0" FontSize="13"/>
            <Button Content="Vorschau beenden" Command="{Binding PreviewStopCommand}" Margin="0,0,0,0" FontSize="13"/>
            
            <Separator Width="16" Margin="8,0,8,0"/>
            
            <Button Content="Aktualisieren" Command="{Binding RefreshCommand}" FontSize="13"/>
        </StackPanel>

        <!-- Liste der Makros -->
        <Border Grid.Row="1" Style="{StaticResource CardBorderStyle}">
            <DataGrid ItemsSource="{Binding Items}"
                      SelectedItem="{Binding Selected}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                    <DataGridTextColumn Header="# Befehle" Binding="{Binding Befehle.Count}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <Border Grid.Row="2" Style="{StaticResource CardBorderStyle}" Margin="0,8,0,0">
            <DockPanel>
                <!-- Kopfbereich: Bearbeiten / Neu / Aufnahme / Speichern -->
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="12,12,12,0" Height="30">
                    <Button Content="Neuen Step hinzufügen" Command="{Binding AddStepCommand}" IsEnabled="{Binding Selected}" Margin="0,0,0,0" FontSize="13"/>
                    <Button Content="Aufnahme starten (Platzhalter)" Command="{Binding RecordStepsCommand}" Margin="8,0,0,0" FontSize="13"/>
                    <Button Content="Speichern" Command="{Binding SaveAllCommand}" Margin="8,0,0,0" FontSize="13"/>
                </StackPanel>

                <ListBox ItemsSource="{Binding Selected.Befehle}"
         SelectedItem="{Binding SelectedStep, Mode=TwoWay}"
         ScrollViewer.VerticalScrollBarVisibility="Auto">

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment"   Value="Stretch"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <!-- wichtig für Hover-HitTests -->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <!-- eine neutrale Hülle, die Hover-Ereignisse bekommt -->
                                        <Border Background="{TemplateBinding Background}">
                                            <!-- Das ist der sichtbare Rahmen deiner „Karte“ -->
                                            <Border x:Name="Card"
                                                Margin="12,8,12,0"
                                                Padding="12"
                                                Background="Transparent"
                                                BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}"
                                                BorderThickness="1"
                                                CornerRadius="8">
                                                <ContentPresenter/>
                                            </Border>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <!-- HOVER: nur der Rahmen -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!-- Teste bei Bedarf erst mit fester Farbe z. B. #FF0078D4 -->
                                                <Setter TargetName="Card" Property="BorderBrush"
                                                    Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                                                <Setter TargetName="Card" Property="BorderThickness" Value="2"/>
                                                
                                            </Trigger>

                                            <!-- SELECTED -->
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Card" Property="BorderBrush"
                                                    Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                                <Setter TargetName="Card" Property="Background"
                                                    Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                                <Setter TargetName="Card" Property="BorderThickness" Value="2"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <!-- DEIN ItemTemplate (mit ergänztem Background & Triggern) -->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!-- Zwei Spalten: links Inhalt, rechts Pfeile (▲ links von ▼) -->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Inhalt -->
                                    <StackPanel Grid.Column="0">
                                        <!-- ANZEIGE: nutzt implizite DataTemplates -->
                                        <ContentPresenter Content="{Binding}"/>
                                            <Grid>
                                                <Grid.Resources>
                                                    <!-- Editor-Templates pro Typ -->
                                                    <DataTemplate DataType="{x:Type mak:MouseMoveBefehl}">
                                                        <UniformGrid Columns="4">
                                                            <TextBlock Text="X:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding X}"/>
                                                            <TextBlock Text="Y:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Y}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type mak:MouseDownBefehl}">
                                                        <UniformGrid Columns="6">
                                                            <TextBlock Text="Button:" VerticalAlignment="Center"/>
                                                            <ComboBox SelectedValuePath="Content"
                                                                                      SelectedValue="{Binding Button}">
                                                                <ComboBoxItem Content="Left"/>
                                                                <ComboBoxItem Content="Right"/>
                                                                <ComboBoxItem Content="Middle"/>
                                                            </ComboBox>
                                                            <TextBlock Text="X:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding X}"/>
                                                            <TextBlock Text="Y:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Y}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type mak:MouseUpBefehl}">
                                                        <UniformGrid Columns="6">
                                                            <TextBlock Text="Button:" VerticalAlignment="Center"/>
                                                            <ComboBox SelectedValuePath="Content"
                                                                                      SelectedValue="{Binding Button}">
                                                                <ComboBoxItem Content="Left"/>
                                                                <ComboBoxItem Content="Right"/>
                                                                <ComboBoxItem Content="Middle"/>
                                                            </ComboBox>
                                                            <TextBlock Text="X:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding X}"/>
                                                            <TextBlock Text="Y:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Y}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type mak:KeyDownBefehl}">
                                                        <UniformGrid Columns="2">
                                                            <TextBlock Text="Key:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Key}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type mak:KeyUpBefehl}">
                                                        <UniformGrid Columns="2">
                                                            <TextBlock Text="Key:" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Key}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type mak:TimeoutBefehl}">
                                                        <UniformGrid Columns="2">
                                                            <TextBlock Text="Duration (ms):" VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Duration}"/>
                                                        </UniformGrid>
                                                    </DataTemplate>
                                                </Grid.Resources>
                                            </Grid>
                                    </StackPanel>

                                    <!-- Aktionen rechts: ▲ (links) vor ▼ (rechts); nur im Edit-Mode sichtbar -->
                                    <StackPanel Grid.Column="1" Orientation="Horizontal"
                                        HorizontalAlignment="Right" VerticalAlignment="Top"
                                        Margin="8,0,0,0">   
                                    <!-- ▲ nach oben -->
                                    <Button Content="▲" Width="28" Height="28" Margin="0,0,4,0"
                                        ToolTip="Schritt nach oben"
                                        Command="{Binding DataContext.MoveStepUpCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                                    <!-- ▼ nach unten -->
                                    <Button Content="▼" Width="28" Height="28"
                                        ToolTip="Schritt nach unten"
                                        Command="{Binding DataContext.MoveStepDownCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                                    <Button Content="Delete" Width="60" Margin="40,0,0,0"
                                        Command="{Binding DataContext.DeleteStepCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                                    </StackPanel>
                                </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </DockPanel>
        </Border>
    </Grid>
</UserControl>
