<UserControl x:Class="DesktopAutomationApp.Views.ListHotkeysView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:DesktopAutomationApp.ViewModels"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:DesktopAutomationApp.Converters"
             mc:Ignorable="d"
             Style="{StaticResource ContentViewBase}">

    <UserControl.Resources>
        <!-- Nur noch allgemeine Converter nötig -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <conv:InverseBooleanToContentConverter x:Key="InverseBooleanToContentConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Toolbar -->
            <RowDefinition Height="2*"/>
            <!-- Liste -->
            <RowDefinition Height="3*"/>
            <!-- Editor -->
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
            <Button Content="Neu" Command="{Binding NewCommand}" Margin="0,0,8,0"/>
            <TextBlock Text="{Binding Items.Count, StringFormat='  ({0} Hotkeys)'}"
                       Margin="12,0,0,0" VerticalAlignment="Center"/>
        </StackPanel>

        <!-- Liste -->
        <Border Grid.Row="1" Style="{StaticResource CardBorderStyle}">
            <DataGrid ItemsSource="{Binding Items}"
                      SelectedItem="{Binding Selected}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                    <!-- Trigger direkt aus EditableHotkey.DisplayTrigger -->
                    <DataGridTextColumn Header="Trigger" Binding="{Binding DisplayTrigger}" Width="2*"/>
                    <DataGridTextColumn Header="Action" Binding="{Binding Action.Name}" Width="2*"/>
                    <DataGridTextColumn Header="Command" Binding="{Binding Action.Command}" Width="*"/>
                    <DataGridTemplateColumn Header="" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Bearbeiten"
                                        Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <!-- Editor -->
        <Border Grid.Row="2" Style="{StaticResource CardBorderStyle}" Margin="0,8,0,0">
            <Grid Margin="12"
                  Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Name -->
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Name" VerticalAlignment="Center"/>
                <TextBox Grid.Row="0" Grid.Column="1"
                         Text="{Binding EditedHotkey.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Action (durchsuchbar) -->
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Action" VerticalAlignment="Center" Margin="0,8,0,0"/>
                <DockPanel Grid.Row="1" Grid.Column="1" Margin="0,8,0,0">
                    <TextBox Width="200" Margin="0,0,8,0"
                             ToolTip="Suche"
                             Text="{Binding ActionFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <ComboBox ItemsSource="{Binding ActionsView}"
                              IsEditable="True"
                              StaysOpenOnEdit="True"
                              IsTextSearchEnabled="False"
                              SelectedItem="{Binding EditedHotkey.Action.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MinWidth="280"/>
                </DockPanel>

                <!-- Command (durchsuchbar) -->
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Command" VerticalAlignment="Center" Margin="0,8,0,0"/>
                <DockPanel Grid.Row="2" Grid.Column="1" Margin="0,8,0,0">
                    <TextBox Width="200" Margin="0,0,8,0"
                             ToolTip="Suche"
                             Text="{Binding CommandFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <ComboBox ItemsSource="{Binding CommandsView}"
                              IsEditable="True"
                              StaysOpenOnEdit="True"
                              IsTextSearchEnabled="False"
                              SelectedItem="{Binding EditedHotkey.Action.Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MinWidth="200"/>
                </DockPanel>

                <!--Aktiv-->
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Aktiv" VerticalAlignment="Center" Margin="0,8,0,0"/>
                <DockPanel Grid.Row="3" Grid.Column="1" Margin="0,8,0,0">
                    <TextBox Width="200" Margin="0,0,8,0"
                         ToolTip="Suche"
                         Text="{Binding ActionFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <ComboBox ItemsSource="{Binding ActionsView}"
                          IsEditable="True"
                          StaysOpenOnEdit="True"
                          IsTextSearchEnabled="False"
                          SelectedItem="{Binding EditedHotkey.Action.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          MinWidth="280"/>
                </DockPanel>
                
                <!-- Trigger -->
                <TextBlock Grid.Row="4" Grid.Column="0" Text="Trigger" VerticalAlignment="Center" Margin="0,8,0,0"/>
                <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Margin="0,8,0,0" >
                    <!-- Anzeige: berechnete Property; aktualisiert sich sofort -->
                    <TextBox IsReadOnly="True" Width="240"
                             Text="{Binding EditedHotkey.DisplayTrigger, Mode=OneWay}" />

                    <!-- Start/Status-Button -->
                    <Button Margin="8,0,0,0"
                            Content="{Binding IsCapturing, Converter={StaticResource InverseBooleanToContentConverter}, ConverterParameter='Erfassen...,Erfassung läuft...'}"
                            Command="{Binding StartCaptureCommand}"
                            IsEnabled="{Binding IsCapturing, Converter={StaticResource InverseBooleanConverter}}" />

                    <!-- Abbrechen nur sichtbar während Capture -->
                    <Button Margin="8,0,0,0"
                            Content="Abbrechen"
                            Command="{Binding CancelCaptureCommand}"
                            Visibility="{Binding IsCapturing, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>

                <!-- Aktionen -->
                <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Margin="0,12,0,0">
                    <Button Content="Speichern" Command="{Binding SaveEditCommand}" Margin="0,0,8,0"/>
                    <Button Content="Abbrechen" Command="{Binding CancelEditCommand}" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
